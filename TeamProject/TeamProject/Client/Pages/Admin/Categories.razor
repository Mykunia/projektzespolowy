@page "/admin/categories"
@using Microsoft.AspNetCore.Authorization;
@using TeamProject.Client.Services.CategoryService;
@using TeamProject.Shared.Models;
@inject ICategoryService CategoryService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable

<h3>Categories</h3>

<div class="row header-part">
    <div class="col-3">Name</div>
    <div class="col-3">Url</div>
    <div class="col-3">Visible</div>
    <div class="col-3"></div>
</div>

@foreach (var category in CategoryService.SecuredCategories)
{
    @if (category.Edit)
    {
        <EditForm Model="editingCategory" OnSubmit="UpdateCategory">
            <div class="row">
                <div class="col-3">
                    <InputText @bind-Value="editingCategory.Name" class="form-control"></InputText>
                </div>
                <div class="col-3">
                    <InputText @bind-Value="editingCategory.Url" class="form-control"></InputText>
                </div>
                <div class="col-3 col-visible">
                    <InputCheckbox @bind-Value="editingCategory.Visibility"></InputCheckbox>
                </div>
                <div class="col-3">
                    <button type="submit" class="btn btn-primary change-btn">
                        <img src="./check.png" class="upload-image" />
                    </button>
                    <button class="btn btn-primary change-btn" @onclick="CancelEditing">
                        <img src="./cancel.png" class="cancel-image" />
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row">
            <div class="col-3">
                @category.Name
            </div>
            <div class="col-3">
                @category.Url
            </div>
            <div class="col-3 col-visible">
                <span>@(category.Visibility ? "✔️" : "")</span>
            </div>
            <div class="col-3">
                <button class="btn btn-primary change-btn" @onclick="(() => EditCategory(category))">
                    <img src="./pencil.png" class="edit-image" />
                </button>
                <button class="btn btn-primary change-btn" @onclick="(() => DeleteCategory(category.Id))">
                    <img src="./trash.png" class="delete-image" />
                </button>
            </div>
        </div>
    }
}
<button class="btn btn-primary category-btn" @onclick="CreateNewCategory">
    <i class="oi oi-plus"></i> Add new category
</button>

@code {
    Category editingCategory = null;

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetSecuredCategories();
        CategoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }

    private void CreateNewCategory()
    {
        editingCategory = CategoryService.CreateNewCategory();
    }

    private void EditCategory(Category category)
    {
        category.Edit = true;
        editingCategory = category;
    }

    private async Task UpdateCategory()
    {
        if (editingCategory.New)
            await CategoryService.AddCategory(editingCategory);
        else
            await CategoryService.UpdateCategory(editingCategory);
        editingCategory = new Category();
    }

    private async Task CancelEditing()
    {
        editingCategory = new Category();
        await CategoryService.GetSecuredCategories();
    }

    private async Task DeleteCategory(int id)
    {
        await CategoryService.DeleteCategory(id);
    }
}
