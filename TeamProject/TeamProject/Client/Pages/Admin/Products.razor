@page "/admin/products"
@using Microsoft.AspNetCore.Authorization;
@using TeamProject.Client.Services.ProductService;
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<h3>Products</h3>

@if (ProductService.SecuredProducts == null)
{
    <span>Loading Products, please wait</span>
}
else
{
    <button class="btn btn-primary float-end" @onclick="CreateProduct">
        <i class="oi oi-plus"></i> Add new product
    </button>
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Product</th>
                <th>Variant</th>
                <th>Price</th>
                <th>Visible</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="ProductService.SecuredProducts" Context="product">
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(product.PictureUrl))
                        {
                            <img src="@product.PictureUrl" />
                        }
                        else if (product.Pictures.Count > 0)
                        {
                            <img src="@product.Pictures[0].Data" />
                        }
                    </td>
                    <td>@product.Name</td>
                    <td>
                        @foreach (var variant in product.Variants)
                        {
                            <span>@variant.ProductType.Name</span>

                            <br />
                        }
                    </td>
                    <td>
                        @foreach (var variant in product.Variants)
                        {
                            <span>@variant.Price</span>

                            <br />
                        }
                    </td>
                    <td>@(product.Visibility ? "✔️" : "")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => EditProduct(product.Id))">
                            <i class="oi oi-pencil"></i>
                        </button>
                    </td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetSecuredProducts();
    }

    void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"admin/product/{productId}");
    }

    void CreateProduct()
    {
        NavigationManager.NavigateTo("admin/product");
    }
}
